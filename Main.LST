C51 COMPILER V7.20   MAIN                                                                  01/03/2017 18:44:00 PAGE 1   


C51 COMPILER V7.20, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          #include <string.h>
   4          #include <ctype.h>
   5          
   6          
   7          void main()
   8          {
   9   1        char input[30]; // input string
  10   1        char *word_begin = input; //pointer to keep track of beginning of a word
  11   1        char *temp = input, *end; //
  12   1        char t; 
  13   1        char *next;           // to keep track of next character in the string
  14   1        int n,i,j,k=0,p;      // loop counter variables
  15   1        
  16   1      
  17   1        SCON = 0x52; 
  18   1        TMOD = 0x20;
  19   1        TCON = 0x40;
  20   1        TH1 = 0xf3; 
  21   1        
  22   1        //printf("Enter String: ");
  23   1        gets (input, sizeof(input));  // reading input string
  24   1        printf("%s\n", input);                // print the entered string
  25   1        
  26   1        n=strlen(input);    // finding length of string
  27   1      
  28   1        // Reversing the words in a String
  29   1        for(i = n; i >= 0; i--)     // outer loop starting from end of the string
  30   1          {
  31   2                 k++;
  32   2             if(input[i-1] == ' ' || i == 0)  // checking for a whitespace or start of string
  33   2             {
  34   3                     for( j = i, p = 1; p <= k ; j++, p++)
  35   3                 {
  36   4                     printf("%c",input[j]);   // Printing character in a word
  37   4                 }
  38   3                         k=0;
  39   3                  }
  40   2                      
  41   2          }
  42   1       
  43   1        // Alphabetical sorting of the String
  44   1        while( *temp )   
  45   1        {
  46   2          temp++;
  47   2      
  48   2          if (*temp == '\0' || *temp == ' ')   // checking if a whitespace or end of string occured
  49   2          {         
  50   3                  end = temp - 1;             // variable to keep track of end of word
  51   3      
  52   3                      while(word_begin <= end) // word_begin holds current character
  53   3                      {
  54   4                         next = word_begin + 1;       //"next" keep track of next character  
  55   4       
C51 COMPILER V7.20   MAIN                                                                  01/03/2017 18:44:00 PAGE 2   

  56   4                         while(next <= end)
  57   4                          {
  58   5                             if(tolower(*word_begin) > tolower(*next)) 
  59   5                                 // Checking if the ASCII value of current character is greater than 
  60   5                                 // the ASCII value of next character
  61   5                                 {
  62   6                                  t = *word_begin;
  63   6                                  *word_begin = *next;   // swaping the values
  64   6                                              *next = t; 
  65   6                                      }
  66   5                             next++;
  67   5                          }                                   
  68   4                         word_begin++;
  69   4                      }         
  70   3                      word_begin = temp+1;            
  71   3          }   
  72   2        }
  73   1      
  74   1        *temp = '\n';
  75   1              
  76   1        printf("\n%s",input); // Printing the sorted string
  77   1      }
  78          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    440    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      50
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
